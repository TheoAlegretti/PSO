proc IML ;
simu=200; /* Number of Monte carlo Simulations */ 
H=j(simu,3,0);
do y=1 to simu; 
c1 = 0;  
c2 = 0.575; 
wmax =0.411;
Nbvar = 2;
wmin = 0.23; 
maxite=15;
nbpart=20;        
g = j(nbpart,nbvar); 
s = j(nbpart,nbvar); 
call randgen(g, "Uniform"); 
call randgen(s,"Uniform");
Minx = -20; 
MAxx = 20;           
x = Minx + (maxx-minx)*g;
v= Minx +(maxx-minx)*s;
P=j(1,nbpart,0);
do b=1 to nbpart;
x1 = x[b,1];
x2 = x[b,2];
F= 2+x1**2+x2**4; /*Objective function */ 
P[b]= F;
end;
P = t(P);
Gbest = Min(P);  
GPBEST = P[>:<];
Xbest = X;
G1= X[GPBEST,1];
G2= X[GPBEST,2];
GM = G1||G2;
P1 = j(1,nbpart,0);
W = Wmax - ((wmax-wmin)/maxite);
do ite=1 to maxite; 
   do b=1 to nbpart; 
   Xbest[b,1] = Min(Xbest[b,1],X[b,1]);
   Xbest[b,2] = Min(Xbest[b,2],X[b,2]);
   V[b,1] = W*v[b,1] + C1*uniform(0)*(Xbest[b,1]-X[b,1]) + C2*uniform(0)*(G1-X[b,1]);
   V[b,2] = W*v[b,2] + C1*uniform(0)*(Xbest[b,2]-X[b,2]) + C2*uniform(0)*(G2-X[b,2]);
   end;
     do c=1 to nbpart;
     X[c,1] = X[c,1] +v[c,1];
     X[c,2] = X[c,2] +v[c,2];
     x1 = x[c,1];
     x2 = x[c,2]; 
     F =2+x1**2+X2**4; /*Objective function */ 
     P1[c] = F;
     end;
W = Wmax - ((wmax-wmin)/maxite)*ite;
  if Min(P1)<=Gbest then do;
  Gbest = Min(P1);
  GPbest = P1[>:<]; 
  G1= X[GPbest,1];
  G2= X[GPbest,2];
  iteb =ite;
  end;
    else do;
    Gbest = Gbest;
    G1=G1;
    G2=G2; 
    end; 
  end;
P1 = t(P1);
H[y,1]=Gbest;
H[y,2]=y;
H[y,3]=iteb;
end;
Result = H[1:simu,1];
MinGbestt = Min(H[,1]);
Num = H[1:simu,2];
itegmax = H[1:simu,3];
Resultm = sum(Result[1:simu,1])/simu;
print H P1 resultm G1 G2 MinGbestt;
/*create pso.testnormal var{"result","num","itegmax"};
append;
close pso.testnormal;*/
call histogram(Result);
quit; 
